# For most projects, this workflow file will not need changing; you simply need
# to commit it to your repository.
#
# You may wish to alter this file to override the set of updated,
# or to provide custom queries or build logic.
#
#
name: "Update"

on:
  # push:
  #   branches: [ main ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ main ]
  schedule:
    - cron: '0 12 10,25 * *'
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'     
        required: true
        default: 'warning'

jobs:
  Update:
    name: Update
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        mysql-version: [8.0]
        python-version: [3.9]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Initialize mysql
      uses: ankane/setup-mysql@v1
      with:
        mysql-version: ${{ matrix.mysql-version }}

    - name: Change Mysql Password
      run: echo $(mysql -e "alter user 'root'@'localhost' identified by '123456';")

    - name: Create DB
      run: echo $(mysql -uroot -p123456 -e "CREATE DATABASE ipdata;")

    - name: Install Python, pipenv and Pipfile packages
      uses: palewire/install-python-pipenv-pipfile@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Update ipdata
      run: |
        chcp 65001
        Set-TimeZone -Name "China Standard Time"
        $timelocal="Auto Update $(Get-Date -Format 'yyyy-MM-dd HH:mm:ss')"
        echo ${timelocal}
        pipenv install --dev
        pipenv run python ./IP_Sync/ip_Sync.py
        
    - name: commit
      run: |
        git config --global user.email ${{ secrets.USER_EMAIL }}
        git config --global user.name ${{ secrets.USER_NAME }}
        git add .
        git commit -m ${timelocal}
        git pull origin main
        $tagname="v$(Get-Date -Format 'yyyy.MM.dd')"
        git tag -a ${tagname} -m "Auto Update $(Get-Date -Format 'yyyy-MM-dd HH:mm:ss')"
        
    - name: Push changes
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        repository: ${{ secrets.REPOSITORY_NAME }}
        tags: true
        
    - name: Build
      run: echo ${timelocal} > Release.txt

    - name: Test
      run: cat Release.txt

    - name: Release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${tagname}
        files: |
          Release.txt
          data/*.db.gz
          data/*.sql.gz
          data/*.dat
          data/*.db
          data/*.txt
